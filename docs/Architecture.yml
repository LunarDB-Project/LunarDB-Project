LunarDB:
  Components:
    Moonlight: query parser
      roles:
        - Given a string representation of a query provide a C++ object representation of it
        - Check for the query syntax to be valid, throw meaningful exceptions if not

      implementation:
        - free functions that parse a query string to a C++ object representation

    Astral: query executor
      roles:
        - Given a valid C++ object representation of a query, execute it
        - If the query cannot be executed throw meaningful exceptions

      implementation:
        - free functions that execute a query represented by a C++ object

    Celestial: users manager
      roles:
        - add / remove / modify -> users (username, password, permissions)
        - authenticate user
        - check if user is authenticated
        - check if given user has permission

      implementation:
        - TBD

    Selenity: logger
      roles:
        - manage log files
        - logs with different severities -> Info, Warn, Error, Critical, System

      implementation:
        - TBD

    BrightMoon: write ahead logger
      roles:
        - write query execution logs
        - undo / redo
        - crash recovery

      implementation:
        - TBD

    Crescentum: data manager
      roles:
        - DiskManager
        - BufferManager
        - FileManager
      implementation:
        - TBD

    LunarDB: server?
      roles:
        - REST API?

      implementation:
        - TBD
